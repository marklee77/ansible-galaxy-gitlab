upstream gitlab {
  server unix:/home/git/gitlab/tmp/sockets/gitlab.socket;
}

{% if gitlab_enable_ssl and gitlab_require_ssl -%}
server {

  listen {{ gitlab_http_port }};
  server_name {{ gitlab_hostname }};

  server_tokens off;     

  add_header Strict-Transport-Security "max-age=15768000; includeSubDomains";
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";

  return 301 https://$server_name
  {%- if gitlab_https_port != 443 %}:{{ gitlab_https_port }}{% endif -%}
  $request_uri;

}
{%- endif %}
  
server {

  server_name {{ gitlab_hostname }};

  {% if not gitlab_require_ssl -%}
  listen {{ gitlab_http_port }};
  {%- endif %}

  server_tokens off;     

  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";

  # Increase this if you want to upload large attachments
  # Or if you want to accept large git objects over http
  client_max_body_size 20m;

  {% if gitlab_enable_ssl -%}
  {% if gitlab_require_ssl -%}
  add_header Strict-Transport-Security "max-age=15768000; includeSubDomains";
  {%- endif %}
  listen {{ gitlab_https_port }} ssl;
  ssl_certificate {{ gitlab_ssl_cert_file }};
  ssl_certificate_key {{ gitlab_ssl_key_file }};
  ssl_ciphers 'EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:+CAMELLIA256:+AES256:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!ECDSA:CAMELLIA256-SHA:AES256-SHA:CAMELLIA128-SHA:AES128-SHA';
  {% if gitlab_ssl_dhparam_file is defined -%}
  ssl_dhparam {{ gitlab_ssl_dhparam_file }};
  {%- endif %}
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 5m;
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate {{ gitlab_ssl_trusted_certificate_file }};

  {%- endif %}
  
  root /home/git/gitlab/public;

  location / {
    # serve static files from defined root folder;.
    # @gitlab is a named location for the upstream fallback, see below
    try_files $uri $uri/index.html $uri.html @gitlab;
  }

  # if a file, which is not found in the root folder is requested,
  # then the proxy pass the request to the upsteam (gitlab unicorn)
  location @gitlab {
    # If you use https make sure you disable gzip compression 
    # to be safe against BREACH attack
    gzip off;

    proxy_read_timeout 300; # Some requests take more than 30 seconds.
    proxy_connect_timeout 300; # Some requests take more than 30 seconds.
    proxy_redirect off;

    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host              $http_host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

    proxy_pass http://gitlab;

  }

  # Enable gzip compression as per rails guide: 
  #     http://guides.rubyonrails.org/asset_pipeline.html#gzip-compression
  # WARNING: If you are using relative urls do remove the block below
  # See config/application.rb under "Relative url support" for the list of
  # other files that need to be changed for relative url support
  location ~ ^/(assets)/  {
    root /home/git/gitlab/public;
    gzip_static on; # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;
  }

  error_page 502 /502.html;

  # individual nginx logs for this gitlab vhost
  access_log  /var/log/nginx/gitlab_access.log;
  error_log   /var/log/nginx/gitlab_error.log;

}
