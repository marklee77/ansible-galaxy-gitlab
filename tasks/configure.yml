---
- name: update gitlab configuration files from templates
  template:
    src: home/git/gitlab/{{ item }}
    dest: /home/git/gitlab/{{ item }}
    owner: git
    group: git
    mode: 0600
  with_items:
    - config/gitlab.yml
    - config/database.yml
    - config/unicorn.rb
    - db/fixtures/production/001_admin.rb

# FIXME: needs to be in mysql section
- name: initialize database
  sudo_user: git
  shell: bundle exec rake gitlab:setup RAILS_ENV=production <<< "yes" && touch .gitlab_db_setup
         executable=/bin/bash
         chdir=/home/git/gitlab
         creates=/home/git/gitlab/.gitlab_db_setup

- name: ensure gitlab links into /etc exist
  file:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    force: yes
    state: link
  with_items:
    - { path: /etc/init.d/gitlab, src: /home/git/gitlab/lib/support/init.d/gitlab }
    - { path: /etc/default/gitlab, src: /home/git/gitlab/lib/support/init.d/gitlab.default.example }
    - { path: /etc/logrotate.d/gitlab, src: /home/git/gitlab/lib/support/logrotate/gitlab }

- name: update /etc/nginx/sites-available/gitlab from template
  template:
    src: etc/nginx/sites-available/gitlab
    dest: /etc/nginx/sites-available/gitlab
    owner: root
    group: root
    mode: 0644
  notify:
    - restart nginx

- name: ensure /etc/nginx/sites-enabled/gitlab exists and links to ../sites-available/gitlab
  file:
    path: /etc/nginx/sites-enabled/gitlab
    src: ../sites-available/gitlab
    force: yes
    state: link
  notify:
    - restart nginx

- name: ensure that there is not a hostname collision with the nginx default host
  lineinfile:
    dest: /etc/nginx/sites-available/default
    regexp: '^(\s+)(server_name {{ gitlab_hostname }};.*)$'
    backrefs: yes
    line: '\1#\2'
    state: present
  notify:
    - restart nginx

- name: ensure gitlab services are started and enabled
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - gitlab
    - nginx

