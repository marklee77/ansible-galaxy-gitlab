---
- name: ensure dependencies available through apt are installed
  apt: 
    pkg: "{{ item }}" 
    state: latest 
    update_cache: yes 
    cache_valid_time: 600
  with_items:
    - build-essential
    - bundler
    - checkinstall
    - curl
    - git
    - libcurl4-openssl-dev
    - libffi-dev
    - libgdbm-dev
    - libicu-dev
    - libmysqlclient-dev
    - libncurses5-dev
    - libreadline-dev
    - libssl-dev
    - libxml2-dev
    - libxslt1-dev
    - logrotate
    - openssh-server
    - redis-server
    - ruby
    - ruby-dev
    - zlib1g-dev
    - libyaml-dev

- name: ensure that git group exists
  group:
    name: git
    state: present

- name: ensure that git user exits
  user:
    name: git
    group: git
    home: /home/git
    createhome: yes
    shell: /bin/bash
    comment: GitLab User
    state: present

- name: ensure link to /srv/git exists
  file:
    src: /home/git
    path: /srv/git
    state: link

- name: ensure gitlabhq_production database is present
  mysql_db: 
    name: gitlabhq_production

- name: ensure git database user is present
  mysql_user: 
    name: git
    host: "{{ item }}" 
    password: "{{ gitlab_git_mysql_password }}" 
    priv: gitlabhq_production.*:ALL
  with_items:
    - "%"
    - localhost

- name: copy .my.cnf file with git password credentials
  template:
    src: home/git/.my.cnf
    dest: /home/git/.my.cnf
    owner: git
    group: git
    mode: 0600

- name: ensure gitlab directory exists and has correct permissions
  file:
    path: /home/git/gitlab
    owner: git
    group: git
    recurse: no
    mode: 0755
    state: directory

- name: check gitlab out of git repository
  sudo_user: git
  git:
    repo: https://gitlab.com/gitlab-org/gitlab-ce.git
    dest: /home/git/gitlab
    update: yes
  notify:
    - restart gitlab

- name: ensure log directory exists and has correct permissions
  file:
    path: /home/git/gitlab/log
    owner: git
    group: git
    recurse: yes
    mode: 0700
    state: directory

- name: ensure tmp directory exists and has correct permissions
  file:
    path: /home/git/gitlab/tmp
    owner: git
    group: git
    recurse: yes
    mode: 0755
    state: directory

- name: ensure tmp/pids directory exists and has correct permissions
  file:
    path: /home/git/gitlab/tmp/pids
    owner: git
    group: git
    recurse: yes
    mode: 0700
    state: directory

- name: ensure tmp/sockets directory exists and has correct permissions
  file:
    path: /home/git/gitlab/tmp/sockets
    owner: git
    group: git
    recurse: yes
    mode: 0755
    state: directory

- name: ensure satellites directory exists and has correct permissions
  file:
    path: /home/git/gitlab-satellites
    owner: git
    group: git
    recurse: yes
    mode: 0750
    state: directory

- name: ensure repositories directory exists and has correct permissions
  file:
    path: /home/git/repositories
    owner: git
    group: git
    recurse: yes
    mode: 0700
    state: directory

- name: ensure repositories/root directory exists and has correct permissions
  file:
    path: /home/git/repositories/root
    owner: git
    group: git
    recurse: yes
    mode: 0700
    state: directory


- name: update gitlab.yml from template
  template:
    src: home/git/gitlab/config/gitlab.yml
    dest: /home/git/gitlab/config/gitlab.yml
    owner: git
    group: git
    mode: 0600
  notify:
    - restart gitlab

- name: update database.yml from template
  template:
    src: home/git/gitlab/config/database.yml
    dest: /home/git/gitlab/config/database.yml
    owner: git
    group: git
    mode: 0600
  notify:
    - restart gitlab

- name: update unicorn.rb from template
  template:
    src: home/git/gitlab/config/unicorn.rb
    dest: /home/git/gitlab/config/unicorn.rb
    owner: git
    group: git
    mode: 0600
  notify:
    - restart gitlab

- name: bundle install ruby gems
  sudo_user: git
  shell: bundle install --deployment --without development test postgres aws && touch .bundle_install
         executable=/bin/bash
         chdir=/home/git/gitlab
         creates=/home/git/gitlab/.bundle_install
  notify:
    - restart gitlab

- name: configure gitlab shell
  sudo_user: git
  shell: bundle exec rake gitlab:shell:install[v1.9.3] REDIS_URL=redis://localhost:6379 RAILS_ENV=production && touch .shell_install
         executable=/bin/bash
         chdir=/home/git/gitlab
         creates=/home/git/gitlab/.shell_install
  notify:
    - restart gitlab

- name: compile assets if necessary
  sudo_user: git
  shell: bundle exec rake assets:precompile RAILS_ENV=production && touch .assets_precompile
         executable=/bin/bash
         chdir=/home/git/gitlab
         creates=/home/git/gitlab/.assets_precompile
  notify:
    - restart gitlab

- name: set up database if necessary 
  sudo_user: git
  shell: bundle exec rake gitlab:setup RAILS_ENV=production <<< "yes" && touch .setup
         executable=/bin/bash
         chdir=/home/git/gitlab
         creates=/home/git/gitlab/.setup
  notify:
    - restart gitlab

- name: link to git init script
  file:
    src: /home/git/gitlab/lib/support/init.d/gitlab
    path: /etc/init.d/gitlab
    state: link

- name: link to gitlab default script
  file:
    src: /home/git/gitlab/lib/support/init.d/gitlab.default.example
    path: /etc/default/gitlab
    state: link

- name: link to gitlab logrotate configuration
  file:
    src: /home/git/gitlab/lib/support/logrotate/gitlab
    path: /etc/logrotate.d/gitlab
    state: link

- name: ensure gitlab is started and enabled
  service:
    name: gitlab
    state: started
    enabled: yes

- name: update gitlab nginx configuration from template
  template:
    src: etc/nginx/sites-available/gitlab
    dest: /etc/nginx/sites-available/gitlab
    owner: root
    group: root
    mode: 0644
  notify:
    - restart nginx

- name: enable gitlab nginx configuration
  file:
    src: ../sites-available/gitlab
    path: /etc/nginx/sites-enabled/gitlab
    state: link
  notify:
    - restart nginx
