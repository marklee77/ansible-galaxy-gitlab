---
- name: ensure dependencies available through apt are installed
  apt: 
    pkg: "{{ item }}" 
    state: latest 
    update_cache: yes 
    cache_valid_time: 600
  with_items:
    - build-essential
    - bundler
    - checkinstall
    - curl
    - git
    - libcurl4-openssl-dev
    - libffi-dev
    - libgdbm-dev
    - libicu-dev
    - libmariadbclient-dev
    - libncurses5-dev
    - libreadline-dev
    - libssl-dev
    - libxml2-dev
    - libxslt1-dev
    - libyaml-dev
    - logrotate
    - nginx
    - redis-server
    - ruby
    - ruby-dev
    - zlib1g-dev

- name: ensure that git group exists
  group:
    name: git
    state: present

- name: ensure that git user exits
  user:
    name: git
    group: git
    home: /home/git
    createhome: yes
    state: present

- name: ensure /srv/git exists and links to /home/git
  file:
    path: /srv/git
    src: /home/git
    force: yes
    state: link

- name: ensure gitlabhq_production database is present
  mysql_db: 
    name: gitlabhq_production

- name: ensure git database user is present
  mysql_user: 
    name: git
    host: "{{ item }}" 
    password: "{{ gitlab_git_mysql_password }}" 
    priv: gitlabhq_production.*:ALL
  with_items:
    - "%"
    - localhost

- name: update /home/git/.my.cnf from template
  template:
    src: home/git/.my.cnf
    dest: /home/git/.my.cnf
    owner: git
    group: git
    mode: "0600"

- name: update /home/git/.gitconfig from template
  template:
    src: home/git/.gitconfig
    dest: /home/git/.gitconfig
    owner: git
    group: git
    mode: "0600"

- name: check gitlab out of git repository
  sudo_user: git
  command: git clone https://gitlab.com/gitlab-org/gitlab-ce.git -b 6-9-stable /home/git/gitlab
           creates=/home/git/gitlab

- name: ensure gitlab subdirectories exist and have correct permissions
  file:
    path: "{{ item }}"
    owner: git
    group: git
    mode: "0700"
    state: directory
  with_items:
    - /home/git/gitlab/log
    - /home/git/gitlab/tmp
    - /home/git/gitlab/tmp/pids
    - /home/git/gitlab/tmp/sockets
    - /home/git/gitlab/public/uploads
    - /home/git/gitlab-satellites

- name: ensure repository directories exist and have correct permissions
  file:
    path: "{{ item }}"
    owner: git
    group: git
    mode: "2770"
    state: directory
  with_items:
    - /home/git/repositories
    - /home/git/repositories/root

#- db/fixtures/production/001_admin.rb
- name: update gitlab config files from templates
  template:
    src: home/git/gitlab/{{ item }}
    dest: /home/git/gitlab/{{ item }}
    owner: git
    group: git
    mode: "0600"
  with_items:
    - config/gitlab.yml
    - config/database.yml
    - config/unicorn.rb
  notify:
    - restart gitlab

- name: bundle install ruby gems
  sudo_user: git
  shell: bundle install --deployment --without development test postgres aws && touch .bundle_install
         executable=/bin/bash
         chdir=/home/git/gitlab
         creates=/home/git/gitlab/.bundle_install

- name: install gitlab shell
  sudo_user: git
  command: bundle exec rake gitlab:shell:install[v1.9.3] REDIS_URL=redis://localhost:6379 RAILS_ENV=production
           chdir=/home/git/gitlab
           creates=/home/git/gitlab-shell

- name: precompile assets
  sudo_user: git
  shell: bundle exec rake assets:precompile RAILS_ENV=production && touch .rake_assets_precompile
         executable=/bin/bash
         chdir=/home/git/gitlab
         creates=/home/git/gitlab/.rake_assets_precompile

- name: initialize database
  sudo_user: git
  shell: bundle exec rake gitlab:setup RAILS_ENV=production <<< "yes" && touch .rake_gitlab_setup
         executable=/bin/bash
         chdir=/home/git/gitlab
         creates=/home/git/gitlab/.rake_gitlab_setup

- name: ensure gitlab links into /etc exist
  file:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    force: yes
    state: link
  with_items:
    - { path: /etc/init.d/gitlab, src: /home/git/gitlab/lib/support/init.d/gitlab }
    - { path: /etc/default/gitlab, src: /home/git/gitlab/lib/support/init.d/gitlab.default.example }
    - { path: /etc/logrotate.d/gitlab, src: /home/git/gitlab/lib/support/logrotate/gitlab }

- name: update /etc/nginx/sites-available/gitlab from template
  template:
    src: etc/nginx/sites-available/gitlab
    dest: /etc/nginx/sites-available/gitlab
    owner: root
    group: root
    mode: 0644
  notify:
    - restart gitlab

- name: ensure /etc/nginx/sites-enabled/gitlab exists and links to ../sites-available/gitlab
  file:
    path: /etc/nginx/sites-enabled/gitlab
    src: ../sites-available/gitlab
    force: yes
    state: link
  notify:
    - restart gitlab

- name: ensure gitlab services are started and enabled
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - gitlab
    - nginx

